apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fast-food.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "fast-food.labels" . | nindent 4 }}
spec:
  {{- if not .Values.app.autoscaling.enabled }}
  replicas: {{ .Values.app.autoscaling.minReplicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fast-food.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "fast-food.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fast-food.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
      - name: {{ .Values.app.name }}
        image: "{{ .Values.global.imageRegistry }}{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.app.service.targetPort }}
          protocol: TCP
        env:
        # Database Configuration
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "fast-food.fullname" . }}-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "fast-food.fullname" . }}-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ include "fast-food.fullname" . }}-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: {{ include "fast-food.fullname" . }}-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "fast-food.fullname" . }}-secrets
              key: DB_PASSWORD
        # MercadoPago Configuration
        - name: ACCESSTOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "fast-food.fullname" . }}-secrets
              key: ACCESSTOKEN
        # Application Configuration
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "fast-food.fullname" . }}-config
              key: PORT
        - name: GIN_MODE
          valueFrom:
            configMapKeyRef:
              name: {{ include "fast-food.fullname" . }}-config
              key: GIN_MODE
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: {{ include "fast-food.fullname" . }}-config
              key: ENVIRONMENT
        livenessProbe:
          {{- toYaml .Values.app.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.app.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.app.resources | nindent 10 }}
        securityContext:
          runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}